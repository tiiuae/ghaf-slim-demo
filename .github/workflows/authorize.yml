# SPDX-FileCopyrightText: 2025 TII (SSRC) and the Ghaf contributors
#
# SPDX-License-Identifier: Apache-2.0

name: authorize

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

jobs:
  # Job - Debug print:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.repository: ${{ github.repository }}"
          echo "github.event.pull_request.head.repo.full_name: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "github.actor: ${{ github.actor }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.event.pull_request.head.sha: ${{github.event.pull_request.head.sha }}"
  # Job - Check author identity:
  check-identity:
    # Skip running in forked repos, since it would fail anyway:
    if: ${{ github.repository == 'tiiuae/ghaf-slim-demo' }}
    runs-on: ubuntu-latest
    outputs:
      authorized_user: ${{ steps.check-authorized-user.outputs.authorized_user }}
    environment: "internal"
    steps:
      - name: Check identity
        id: check-authorized-user
        shell: bash
        run: |
          authorized_user='False'
          for user in ${{ vars.AUTHORIZED_USERS }};
          do
            if [ "$user" = "${{ github.actor }}" ]; then
              authorized_user='True'
              break
            fi
          done
          echo "authorized_user=$authorized_user"
          echo "authorized_user=$authorized_user" >> "$GITHUB_OUTPUT"
  # Job - Authorize:
  authorize:
    needs: [check-identity]
    # Authorization passes without approval if:
    # - The event is not a pull request (e.g. push to main) or
    # - Pull request comes from another branch in the same repo or
    # - Actor is authorized
    # Otherwise, the workflow requires manual approval from a maintainer
    # as configured in the 'external' github environment
    environment: ${{
      ( github.event_name != 'pull_request_target' ||
        github.event.pull_request.head.repo.full_name == github.repository ||
        needs.check-identity.outputs.authorized_user == 'True' )
      && 'internal' || 'external' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Auth OK"
  # Job - Runs only if actor is authorized:
  run-authorized:
    needs: [authorize]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          fetch-depth: 0
      - name: Run-authorized
        run: |
          echo "[+] Apt update:"
          sudo apt-get update; sudo apt-get install -y git
          echo "[+] Git log:"
          git log --oneline -n5
          echo "[+] Access secret: ${{ secrets.TEST_SECRET }}"
